# RTMP Streaming Configuration
# Copy this file to .env and fill in your values

# ==========================================
# REQUIRED CONFIGURATION
# ==========================================

# RTMP server endpoint URL (required)
# Examples:
# - MediaMTX: rtmp://localhost:1935/live/stream
# - nginx-rtmp: rtmp://your-server.com:1935/live/stream
# - YouTube Live: rtmp://a.rtmp.youtube.com/live2/your-stream-key
# - Twitch: rtmp://live.twitch.tv/app/your-stream-key
# - Custom: rtmp://your-server.com:1935/app/stream
RTMP_URL=rtmp://localhost:1935/live/map

# ==========================================
# BROWSER CONFIGURATION
# ==========================================

# URL to load in the browser
BROWSER_URL=https://stream-radar.web.garage.livelyvideo.tv/minimap

# Browser type: 'chrome' or 'playwright'
# Use 'playwright' for advanced automation capabilities
BROWSER_TYPE=chrome

# Optional: JavaScript to inject into the page
# INJECT_SCRIPT="document.querySelector('.play-button')?.click();"

# ==========================================
# VIDEO CONFIGURATION
# ==========================================

# Screen resolution
SCREEN_WIDTH=720
SCREEN_HEIGHT=1080
SCREEN_DEPTH=24

# Video encoding settings
FRAMERATE=30
BITRATE=2500000  # in bits per second (2.5 Mbps)

# Video codec (for services that support codec selection)
# Options: h264, vp8, vp9, av1
VIDEO_CODEC=h264

# ==========================================
# AUDIO CONFIGURATION
# ==========================================

# Audio bitrate in bits per second
AUDIO_BITRATE=96000

# Audio sample rate in Hz
AUDIO_SAMPLE_RATE=48000

# Number of audio channels (1=mono, 2=stereo)
AUDIO_CHANNELS=2

# ==========================================
# STREAMING MODE CONFIGURATION
# ==========================================

# Streaming backend: always uses FFmpeg with RTMP
# (STREAM_MODE variable is no longer used)

# ==========================================
# ADVANCED CONFIGURATION
# ==========================================

# Virtual display number (default: 99)
# Change if you have conflicts with other X servers
DISPLAY_NUM=99

# Chrome additional arguments (space-separated)
# CHROME_EXTRA_ARGS="--force-device-scale-factor=1.5"

# GStreamer pipeline debug level (0-5, higher = more verbose)
# GST_DEBUG=3

# Enable VNC server for debugging (true/false)
ENABLE_VNC=false

# VNC password (if VNC is enabled)
VNC_PASSWORD=

# ==========================================
# DOCKER CONFIGURATION
# ==========================================

# Container name
CONTAINER_NAME=rtmp-browser-streamer

# Shared memory size for Chrome
SHM_SIZE=2gb

# CPU limit (number of cores)
CPU_LIMIT=2

# Memory limit
MEMORY_LIMIT=4G

# ==========================================
# MONITORING & LOGGING
# ==========================================

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable performance monitoring
ENABLE_MONITORING=false

# Prometheus metrics port (if monitoring enabled)
METRICS_PORT=9090

# ==========================================
# NETWORK CONFIGURATION
# ==========================================

# Use host network mode (true/false)
# Reduces latency but less isolated
USE_HOST_NETWORK=false

# Custom DNS servers (comma-separated)
# DNS_SERVERS=8.8.8.8,8.8.4.4

# ==========================================
# TESTING & DEVELOPMENT
# ==========================================

# Enable test mode (uses test pattern instead of browser)
TEST_MODE=false

# Test pattern type (if TEST_MODE=true)
# Options: smpte, snow, black, white, red, green, blue, checkers-1, ball
TEST_PATTERN=smpte

# ==========================================
# NOTES
# ==========================================
#
# 1. For production use, consider using Docker secrets instead of env vars
#    for sensitive values like RTMP stream keys
#
# 2. Adjust BITRATE based on your network capacity:
#    - Low: 1000000 (1 Mbps)
#    - Medium: 2500000 (2.5 Mbps)
#    - High: 5000000 (5 Mbps)
#    - Ultra: 10000000 (10 Mbps)
#
# 3. For better quality with higher CPU usage, change x264 preset:
#    - ultrafast (lowest quality, lowest CPU)
#    - veryfast (default)
#    - fast
#    - medium
#    - slow (highest quality, highest CPU)
#
# 4. If experiencing issues, enable debug logging:
#    LOG_LEVEL=debug
